name: Build and Publish image_recognition

on:
  push:
    branches: [ main ]
    paths:
      - 'code/image_recognition/**'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image metadata
        id: meta
        run: |
          OWNER="${{ github.repository_owner }}"
          OWNER_LOWER=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_OWNER=$OWNER_LOWER" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/$OWNER_LOWER/delitter-image-recognition" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Build and push (GHCR)
        uses: docker/build-push-action@v5
        with:
          context: ./code/image_recognition
          file: ./code/image_recognition/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            GIT_HASH=${{ github.sha }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          # Use both GitHub Actions cache and a registry-backed cache image
          # so runners can pull cached layers from ghcr.io when available.
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-${{ github.ref_name }}
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
            type=gha
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-${{ github.ref_name }},mode=max
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
            type=gha,mode=max

      - name: Trigger Render deploy
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.IMAGE_RECOGNITION_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true